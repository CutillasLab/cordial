geom_hline(
yintercept = -log10(0.05),
linetype = "dashed"
) +
geom_vline(
xintercept = 0,
linetype = "dashed"
) +
facet_wrap(vars(Target)) +
scale_color_viridis_c(
option = "H",
limits = c(-max_abs_slope, max_abs_slope),
guide = guide_colourbar(barwidth = 8, barheight = 0.8)
) +
theme_bw() +
theme(
legend.position = "top",
plot.title = element_text(size = 10),
strip.text = element_text(size = 8),
axis.title = element_text(size = 9),
axis.text = element_text(size = 8)
) +
labs(
title = "Pearson's correlations",
x = "r-value",
y = "-log10(q-value)",
)
# view plot
plot_results
# create plot
plot_results <- ggplot(
results[q < 0.05],
aes(x = r, y = -log10(q), colour = Slope)) +
geom_point(
data = results[q > 0.05],
colour = "grey",
alpha = 0.5
) +
geom_point(alpha = 0.5) +
geom_label_repel(
data = annotations,
aes(label = Correlation),
colour = "black",
size = 2.5,
force = 5,
force_pull = 0.5,
direction = "y",
nudge_y = 3,
nudge_x = 2,
label.padding = 0.15
) +
geom_hline(
yintercept = -log10(0.05),
linetype = "dashed"
) +
geom_vline(
xintercept = 0,
linetype = "dashed"
) +
facet_wrap(vars(Target)) +
scale_color_viridis_c(
option = "H",
limits = c(-max_abs_slope, max_abs_slope),
guide = guide_colourbar(barwidth = 8, barheight = 0.7)
) +
theme_bw() +
theme(
legend.position = "top",
plot.title = element_text(size = 10),
strip.text = element_text(size = 8),
axis.title = element_text(size = 9),
axis.text = element_text(size = 8)
) +
labs(
title = "Pearson's correlations",
x = "r-value",
y = "-log10(q-value)",
)
# view plot
plot_results
# create plot
plot_results <- ggplot(
results[q < 0.05],
aes(x = r, y = -log10(q), colour = Slope)) +
geom_point(
data = results[q > 0.05],
colour = "grey",
alpha = 0.5
) +
geom_point(alpha = 0.5) +
geom_label_repel(
data = annotations,
aes(label = Correlation),
colour = "black",
size = 2.5,
force = 5,
force_pull = 0.5,
direction = "y",
nudge_y = 3,
nudge_x = 2,
label.padding = 0.15
) +
geom_hline(
yintercept = -log10(0.05),
linetype = "dashed"
) +
geom_vline(
xintercept = 0,
linetype = "dashed"
) +
facet_wrap(vars(Target)) +
scale_color_viridis_d(
# scale_color_viridis_c(
# option = "H",
limits = c(-max_abs_slope, max_abs_slope),
guide = guide_colourbar(barwidth = 8, barheight = 0.7)
) +
theme_bw() +
theme(
legend.position = "top",
plot.title = element_text(size = 10),
strip.text = element_text(size = 8),
axis.title = element_text(size = 9),
axis.text = element_text(size = 8)
) +
labs(
title = "Pearson's correlations",
x = "r-value",
y = "-log10(q-value)",
)
# create plot
plot_results <- ggplot(
results[q < 0.05],
aes(x = r, y = -log10(q), colour = Slope)) +
geom_point(
data = results[q > 0.05],
colour = "grey",
alpha = 0.5
) +
geom_point(alpha = 0.5) +
geom_label_repel(
data = annotations,
aes(label = Correlation),
colour = "black",
size = 2.5,
force = 5,
force_pull = 0.5,
direction = "y",
nudge_y = 3,
nudge_x = 2,
label.padding = 0.15
) +
geom_hline(
yintercept = -log10(0.05),
linetype = "dashed"
) +
geom_vline(
xintercept = 0,
linetype = "dashed"
) +
facet_wrap(vars(Target)) +
scale_color_viridis_d(
# scale_color_viridis_c(
# option = "H",
# limits = c(-max_abs_slope, max_abs_slope),
guide = guide_colourbar(barwidth = 8, barheight = 0.7)
) +
theme_bw() +
theme(
legend.position = "top",
plot.title = element_text(size = 10),
strip.text = element_text(size = 8),
axis.title = element_text(size = 9),
axis.text = element_text(size = 8)
) +
labs(
title = "Pearson's correlations",
x = "r-value",
y = "-log10(q-value)",
)
# view plot
plot_results
# create plot
plot_results <- ggplot(
results[q < 0.05],
aes(x = r, y = -log10(q), colour = Slope)) +
geom_point(
data = results[q > 0.05],
colour = "grey",
alpha = 0.5
) +
geom_point(alpha = 0.5) +
geom_label_repel(
data = annotations,
aes(label = Correlation),
colour = "black",
size = 2.5,
force = 5,
force_pull = 0.5,
direction = "y",
nudge_y = 3,
nudge_x = 2,
label.padding = 0.15
) +
geom_hline(
yintercept = -log10(0.05),
linetype = "dashed"
) +
geom_vline(
xintercept = 0,
linetype = "dashed"
) +
facet_wrap(vars(Target)) +
scale_color_viridis_c(
option = "H",
limits = c(-max_abs_slope, max_abs_slope),
guide = guide_colourbar(barwidth = 8, barheight = 0.7)
) +
theme_bw() +
theme(
legend.position = "top",
plot.title = element_text(size = 10),
strip.text = element_text(size = 8),
axis.title = element_text(size = 9),
axis.text = element_text(size = 8)
) +
labs(
title = "Pearson's correlations",
x = "r-value",
y = "-log10(q-value)",
)
# view plot
plot_results
# save plot
ggsave("Figure 1.pdf", width = 4.5, height = 7.5, units = "in")
# create plot
plot_results <- ggplot(
results[q < 0.05],
aes(x = r, y = -log10(q), colour = Slope)) +
geom_point(
data = results[q > 0.05],
colour = "grey",
alpha = 0.5
) +
geom_point(alpha = 0.5) +
geom_label_repel(
data = annotations,
aes(label = Correlation),
colour = "black",
size = 2.5,
force = 5,
force_pull = 0.5,
direction = "y",
nudge_y = 3,
nudge_x = 2,
label.padding = 0.15,
segment.size = 0.5
) +
geom_hline(
yintercept = -log10(0.05),
linetype = "dashed"
) +
geom_vline(
xintercept = 0,
linetype = "dashed"
) +
facet_wrap(vars(Target)) +
scale_color_viridis_c(
option = "H",
limits = c(-max_abs_slope, max_abs_slope),
guide = guide_colourbar(barwidth = 8, barheight = 0.7)
) +
theme_bw() +
theme(
legend.position = "top",
legend.title = element_text(size = 9),
legend.text = element_text(size = 8),
plot.title = element_text(size = 10),
strip.text = element_text(size = 8),
axis.title = element_text(size = 9),
axis.text = element_text(size = 8)
) +
labs(
title = "Pearson's correlations",
x = "r-value",
y = "-log10(q-value)",
)
# view plot
plot_results
# create plot
plot_results <- ggplot(
results[q < 0.05],
aes(x = r, y = -log10(q), colour = Slope)) +
geom_point(
data = results[q > 0.05],
colour = "grey",
alpha = 0.5
) +
geom_point(alpha = 0.5) +
geom_label_repel(
data = annotations,
aes(label = Correlation),
colour = "black",
size = 2.5,
force = 5,
force_pull = 0.5,
direction = "y",
nudge_y = 3,
nudge_x = 2,
label.padding = 0.15,
segment.size = 0.3
) +
geom_hline(
yintercept = -log10(0.05),
linetype = "dashed",
size = 0.5,
alpha = 0.5
) +
geom_vline(
xintercept = 0,
linetype = "dashed",
size = 0.5
) +
facet_wrap(vars(Target)) +
scale_color_viridis_c(
option = "H",
limits = c(-max_abs_slope, max_abs_slope),
guide = guide_colourbar(barwidth = 8, barheight = 0.7)
) +
theme_bw() +
theme(
legend.position = "top",
legend.title = element_text(size = 9),
legend.text = element_text(size = 8),
plot.title = element_text(size = 10),
strip.text = element_text(size = 8),
axis.title = element_text(size = 9),
axis.text = element_text(size = 8)
) +
labs(
title = "Pearson's correlations",
x = "r-value",
y = "-log10(q-value)",
)
# create plot
plot_results <- ggplot(
results[q < 0.05],
aes(x = r, y = -log10(q), colour = Slope)) +
geom_point(
data = results[q > 0.05],
colour = "grey",
alpha = 0.5
) +
geom_point(alpha = 0.5) +
geom_label_repel(
data = annotations,
aes(label = Correlation),
colour = "black",
size = 2.5,
force = 5,
force_pull = 0.5,
direction = "y",
nudge_y = 3,
nudge_x = 2,
label.padding = 0.15,
segment.size = 0.3
) +
geom_hline(
yintercept = -log10(0.05),
linetype = "dashed",
linewidth = 0.5,
alpha = 0.5
) +
geom_vline(
xintercept = 0,
linetype = "dashed",
linewidth = 0.5
) +
facet_wrap(vars(Target)) +
scale_color_viridis_c(
option = "H",
limits = c(-max_abs_slope, max_abs_slope),
guide = guide_colourbar(barwidth = 8, barheight = 0.7)
) +
theme_bw() +
theme(
legend.position = "top",
legend.title = element_text(size = 9),
legend.text = element_text(size = 8),
plot.title = element_text(size = 10),
strip.text = element_text(size = 8),
axis.title = element_text(size = 9),
axis.text = element_text(size = 8)
) +
labs(
title = "Pearson's correlations",
x = "r-value",
y = "-log10(q-value)",
)
# view plot
plot_results
# save plot
ggsave("Figure 1.pdf", width = 4.5, height = 7.5, units = "in")
# create plot
plot_results <- ggplot(
results[q < 0.05],
aes(x = r, y = -log10(q), colour = Slope)) +
geom_point(
data = results[q > 0.05],
colour = "grey",
alpha = 0.5
) +
geom_point(alpha = 0.5) +
geom_label_repel(
data = annotations,
aes(label = Correlation),
colour = "black",
size = 2.5,
force = 5,
force_pull = 0.5,
direction = "y",
nudge_y = 3,
nudge_x = 2,
label.padding = 0.15,
segment.size = 0.3
) +
geom_hline(
yintercept = -log10(0.05),
linetype = "dashed",
linewidth = 0.4,
alpha = 0.5
) +
geom_vline(
xintercept = 0,
linetype = "dashed",
linewidth = 0.4,
alpha = 0.5
) +
facet_wrap(vars(Target)) +
scale_color_viridis_c(
option = "H",
limits = c(-max_abs_slope, max_abs_slope),
guide = guide_colourbar(barwidth = 8, barheight = 0.7)
) +
theme_bw() +
theme(
legend.position = "top",
legend.title = element_text(size = 9),
legend.text = element_text(size = 8),
plot.title = element_text(size = 10),
strip.text = element_text(size = 8),
axis.title = element_text(size = 9),
axis.text = element_text(size = 8)
) +
labs(
title = "Pearson's correlations",
x = "r-value",
y = "-log10(q-value)",
)
# view plot
plot_results
# save plot
ggsave("Figure 1.pdf", width = 4.5, height = 7.5, units = "in")
load("C:/Users/BuzzB/OneDrive - Queen Mary, University of London/MSc-Bioinformatics/Research-Project-BIO702P/Package/cordial/data/cellmeta_DT.rda")
load("C:/Users/BuzzB/OneDrive - Queen Mary, University of London/MSc-Bioinformatics/Research-Project-BIO702P/Package/cordial/data/crispr_DT.rda")
load("C:/Users/BuzzB/OneDrive - Queen Mary, University of London/MSc-Bioinformatics/Research-Project-BIO702P/Package/cordial/data/rnai_DT.rda")
library(devtools)
use_data(cellmeta_DT, crispr_DT, rnai_DT, internal = FALSE, overwrite = TRUE, compress = "bzip2", version = 3, ascii = FALSE)
document()
document()
document()
document()
use_package_doc()
document()
?cordial
document()
?cordial
document()
?cordial
document()
?cordial
document()
?cordial
document()
?cordial
document()
?cordial
document()
?cordial
document()
?cordial
check()
build()
document()
build()
remove.packages("cordial")
devtools::install_github("iibadshah/cordial@*release")
devtools::install_github("iibadshah/cordial@*release")
devtools::install_github("iibadshah/cordial", ref = "v0.1.10")
devtools::install_github("iibadshah/cordial@*release")
devtools::install_url("https://github.com/iibadshah/cordial/releases/download/v0.1.10/cordial_0.1.10.tar.gz")
?cordial
??cordial
library(devtools)
document()
document()
build()
remove.packages("cordial")
devtools::install_url("https://github.com/iibadshah/cordial/releases/download/v0.1.10/cordial_0.1.10.tar.gz")
devtools::install_url("https://github.com/iibadshah/cordial/releases/download/v0.1.10/cordial_0.1.10.tar.gz")
devtools::install_url("https://github.com/iibadshah/cordial/releases/download/v0.1.10/cordial_0.1.10.tar.gz")
devtools::install_url("https://github.com/CutillasLab/cordial/releases/download/v0.1.10/cordial_0.1.10.tar.gz")
